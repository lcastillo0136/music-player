  <section>
    <section class="hbox stretch"> 
      <?php $this->partial('layouts/left_menu'); ?>
      <section id="content">
        <section class="hbox stretch">
          <section>
            <section class="vbox">
              <section class="scrollable padder-lg" id="bjax-target" v-bind:class="{'w-f-md': player.available}"> 
                <?php $this->partial('index/discover'); ?>
                <?php $this->partial('index/new_songs'); ?>
              </section>            
              <?php $this->partial('layouts/song_player'); ?>
            </section>
          </section> <!-- side content -->
          <?php $this->partial('layouts/users_menu'); ?>
        </section> 

      </section>
    </section>
  </section>
  <script type="text/javascript">
    var indeContentVuw = new Vue({
      mixins: [mixin],
      el: '#content',
      data: {
        player: {
          available: true
        },
      },
      computed: {
        discoverSongs: function() {
          var rand_arr = [];
          for(var indexSong=0;indexSong<12;indexSong++) {
            rand_arr.push(Math.floor(Math.random() * this.state.songs.length));
          }
          return this.state.songs.slice(0).filter((f,fi)=>rand_arr.includes(fi));
        },
        newSongs: function() {
          return this.state.songs.slice(0).sort((a,b)=>new Date(b.date)-new Date(a.date));
        },
        topSongs: function() {
          return this.state.songs.slice(0).sort((a,b)=>b.no_plays-a.no_plays);
        }
      },
      methods: {
        refresh: function(mevt) { 
          if (mevt && mevt.target) {
            $(mevt.target || mevt.srcElement).toggleClass('fa-spin');
          }
          axios.get('/songs/update/', {
            params: {

            }
          }).then(function (response) {
            if (mevt && mevt.target) {
              $(mevt.target || mevt.srcElement).toggleClass('fa-spin');
            }  
          })
          .catch(function (error) {
            if (mevt && mevt.target) {
              $(mevt.target || mevt.srcElement).toggleClass('fa-spin');
            }
          });
        },
        likeSong: function(songToLike) {
          var that = this;
          songToLike.like = !(songToLike.like == '1');
          axios.put('/song/'+songToLike.id+'/like', {
            like: songToLike.like,
          }).then(function (response) {
            
          }).catch(function (error) {
            
          });  
        },
        addToPlayList: function(songToAdd) {
          var that = this;
          myPlaylist.add({
            title: songToAdd.filename,
            artist: songToAdd.tags.artist,
            mp3: '/song/'+songToAdd.id+'.mp3',
            poster: "",
            song: songToAdd
          }, true);

          var current_playlist = (localStorage.getItem('playlist') && eval(localStorage.getItem('playlist'))) || [];
          current_playlist.push({
            title: songToAdd.filename,
            artist: songToAdd.tags.artist,
            mp3: '/song/'+songToAdd.id+'.mp3',
            poster: "",
            song: songToAdd
          });
          localStorage.setItem('playlist', JSON.stringify(current_playlist));
        }
      }
    })
  </script>